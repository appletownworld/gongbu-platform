import { NestFactory } from '@nestjs/core';
import { ValidationPipe, Logger } from '@nestjs/common';
import { DocumentBuilder, SwaggerModule } from '@nestjs/swagger';
import { json, urlencoded } from 'express';
import { AppModule } from './app.module';

async function bootstrap() {
  const logger = new Logger('PaymentService');

  const app = await NestFactory.create(AppModule, {
    logger: ['log', 'error', 'warn', 'debug', 'verbose'],
  });

  // Global validation pipe
  app.useGlobalPipes(
    new ValidationPipe({
      whitelist: true,
      transform: true,
      forbidNonWhitelisted: true,
    })
  );

  // Middleware –¥–ª—è parsing body (–æ—Å–æ–±–µ–Ω–Ω–æ –≤–∞–∂–Ω–æ –¥–ª—è webhooks)
  app.use(json({ 
    limit: '50mb',
    verify: (req: any, res, buf) => {
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º raw body –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ webhook –ø–æ–¥–ø–∏—Å–µ–π
      req.rawBody = buf;
    }
  }));
  app.use(urlencoded({ extended: true, limit: '50mb' }));

  // API prefix
  const apiPrefix = 'api/v1';
  app.setGlobalPrefix(apiPrefix);

  // CORS
  app.enableCors({
    origin: process.env.CORS_ORIGIN || '*',
    methods: ['GET', 'POST', 'PUT', 'DELETE', 'PATCH', 'OPTIONS'],
    allowedHeaders: ['Content-Type', 'Authorization', 'X-Requested-With', 'stripe-signature'],
    credentials: true,
  });

  // Swagger documentation
  const config = new DocumentBuilder()
    .setTitle('Gongbu Payment Service API')
    .setDescription(`
      üè¶ **Payment Service** - –ú–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å –ø–ª–∞—Ç–µ–∂–µ–π –¥–ª—è Gongbu Learning Platform

      ## üöÄ **–û—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:**
      
      ### üí≥ **–ü–ª–∞—Ç–µ–∂–∏**
      - –°–æ–∑–¥–∞–Ω–∏–µ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –ø–ª–∞—Ç–µ–∂–µ–π
      - –ü–æ–¥–¥–µ—Ä–∂–∫–∞ Stripe –∏ YooKassa
      - –ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã (–∫–∞—Ä—Ç—ã, —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–µ –∫–æ—à–µ–ª—å–∫–∏, –±–∞–Ω–∫–æ–≤—Å–∫–∏–µ –ø–µ—Ä–µ–≤–æ–¥—ã)
      - –ë–µ–∑–æ–ø–∞—Å–Ω—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ —Å —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ–º

      ### üîÑ **–í–æ–∑–≤—Ä–∞—Ç—ã**
      - –ü–æ–ª–Ω—ã–µ –∏ —á–∞—Å—Ç–∏—á–Ω—ã–µ –≤–æ–∑–≤—Ä–∞—Ç—ã
      - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞
      - –ò—Å—Ç–æ—Ä–∏—è –≤—Å–µ—Ö –æ–ø–µ—Ä–∞—Ü–∏–π

      ### üìä **–ü–æ–¥–ø–∏—Å–∫–∏**
      - –†–µ–∫—É—Ä–µ–Ω—Ç–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∏
      - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∂–∏–∑–Ω–µ–Ω–Ω—ã–º —Ü–∏–∫–ª–æ–º –ø–æ–¥–ø–∏—Å–æ–∫
      - –ü—Ä–æ–±–Ω—ã–µ –ø–µ—Ä–∏–æ–¥—ã –∏ —Å–∫–∏–¥–∫–∏

      ### üîó **Webhook'–∏**
      - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–±—ã—Ç–∏–π –æ—Ç –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤
      - –ó–∞—â–∏—â–µ–Ω–Ω—ã–µ endpoints —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –ø–æ–¥–ø–∏—Å–∏
      - Retry-–º–µ—Ö–∞–Ω–∏–∑–º—ã –∏ –¥–µ–¥—É–ø–ª–∏–∫–∞—Ü–∏—è

      ### üìà **–ê–Ω–∞–ª–∏—Ç–∏–∫–∞**
      - –ü–æ–¥—Ä–æ–±–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–ª–∞—Ç–µ–∂–µ–π
      - –û—Ç—á–µ—Ç—ã –ø–æ –¥–æ—Ö–æ–¥–∞–º
      - –ê–Ω–∞–ª–∏–∑ –∫–æ–Ω–≤–µ—Ä—Å–∏–∏

      ## üõ°Ô∏è **–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å**
      - JWT –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è
      - Webhook signature verification
      - PCI DSS —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —á–µ—Ä–µ–∑ Stripe/YooKassa
      - –®–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö

      ## üîß **–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏**
      - Stripe (–º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∏)
      - YooKassa (–ø–ª–∞—Ç–µ–∂–∏ –≤ –†–æ—Å—Å–∏–∏)
      - Auth Service (–∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è)
      - Course Service (—Å–≤—è–∑—å —Å –∫—É—Ä—Å–∞–º–∏)
      - Notification Service (—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è)

      ---
      **–û–∫—Ä—É–∂–µ–Ω–∏–µ:** ${process.env.NODE_ENV || 'development'}
    `)
    .setVersion('1.0.0')
    .addBearerAuth()
    .addTag('Payments', 'üí≥ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞–º–∏')
    .addTag('Subscriptions', 'üîÑ –ü–æ–¥–ø–∏—Å–∫–∏ –∏ —Ä–µ–∫—É—Ä–µ–Ω—Ç–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∏')
    .addTag('Refunds', 'üí∏ –í–æ–∑–≤—Ä–∞—Ç—ã –∏ –æ—Ç–º–µ–Ω—ã')
    .addTag('Webhooks', 'üîó Webhook endpoints –¥–ª—è –ø–ª–∞—Ç–µ–∂–Ω—ã—Ö –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤')
    .addTag('Analytics', 'üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –ø–ª–∞—Ç–µ–∂–µ–π')
    .addTag('Health', '‚ù§Ô∏è –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Ä–≤–∏—Å–∞')
    .addServer(`http://localhost:${process.env.PORT || 3004}/${apiPrefix}`, 'Development')
    .addServer(`https://api.gongbu.app/${apiPrefix}`, 'Production')
    .build();

  const document = SwaggerModule.createDocument(app, config);
  SwaggerModule.setup(`${apiPrefix}/docs`, app, document, {
    customSiteTitle: 'Gongbu Payment Service API',
    customCss: `
      .swagger-ui .topbar { display: none; }
      .swagger-ui .info .title { color: #059669; }
    `,
    swaggerOptions: {
      persistAuthorization: true,
      displayRequestDuration: true,
      filter: true,
      showExtensions: true,
      showCommonExtensions: true,
    },
  });

  // Health check endpoint
  app.getHttpAdapter().get('/health/live', (req, res) => {
    res.status(200).json({
      status: 'ok',
      service: 'payment-service',
      timestamp: new Date().toISOString(),
      environment: process.env.NODE_ENV || 'development',
      version: '1.0.0',
    });
  });

  // Readiness check endpoint
  app.getHttpAdapter().get('/health/ready', (req, res) => {
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫–∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ (–ë–î, –≤–Ω–µ—à–Ω–∏–µ —Å–µ—Ä–≤–∏—Å—ã –∏ —Ç.–¥.)
    res.status(200).json({
      status: 'ready',
      service: 'payment-service',
      timestamp: new Date().toISOString(),
      checks: {
        database: 'ok', // TODO: —Ä–µ–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ë–î
        stripe: process.env.STRIPE_SECRET_KEY ? 'configured' : 'not_configured',
        yookassa: process.env.YOOKASSA_SECRET_KEY ? 'configured' : 'not_configured',
      },
    });
  });

  const port = process.env.PORT || 3004;
  const host = process.env.HOST || '0.0.0.0';

  await app.listen(port, host);

  logger.log(`üè¶ Payment Service –∑–∞–ø—É—â–µ–Ω –Ω–∞ ${host}:${port}`);
  logger.log(`üìö API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: http://localhost:${port}/${apiPrefix}/docs`);
  logger.log(`‚ù§Ô∏è Health check: http://localhost:${port}/health/live`);
  logger.log(`üîÑ Readiness check: http://localhost:${port}/health/ready`);

  // –õ–æ–≥–∏—Ä—É–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
  logger.log(`üåç –û–∫—Ä—É–∂–µ–Ω–∏–µ: ${process.env.NODE_ENV || 'development'}`);
  logger.log(`üí≥ Stripe: ${process.env.STRIPE_SECRET_KEY ? '‚úÖ –Ω–∞—Å—Ç—Ä–æ–µ–Ω' : '‚ùå –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω'}`);
  logger.log(`üè¶ YooKassa: ${process.env.YOOKASSA_SECRET_KEY ? '‚úÖ –Ω–∞—Å—Ç—Ä–æ–µ–Ω' : '‚ùå –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω'}`);
  logger.log(`üìä –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: ${process.env.PAYMENT_SERVICE_DATABASE_URL ? '‚úÖ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞' : '‚ùå –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞'}`);

  if (process.env.NODE_ENV !== 'production') {
    logger.warn('‚ö†Ô∏è –°–µ—Ä–≤–∏—Å —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏');
  }
}

bootstrap().catch((error) => {
  console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ Payment Service:', error);
  process.exit(1);
});
