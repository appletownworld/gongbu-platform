version: '3.8'

services:
  # Load Balancer
  nginx:
    image: nginx:alpine
    container_name: gongbu-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - api-gateway-1
      - api-gateway-2
      - api-gateway-3
    networks:
      - gongbu-network
    restart: unless-stopped

  # API Gateway (3 instances)
  api-gateway-1:
    build:
      context: ../services/api-gateway
      dockerfile: Dockerfile.prod
    container_name: gongbu-api-gateway-1
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DATABASE_URL=postgresql://gongbu_enterprise_user:ultra-secure-enterprise-password-64-chars@postgres-master:5432/gongbu_enterprise
      - REDIS_URL=redis://:enterprise-redis-password-32-chars@redis-cluster:6379
    depends_on:
      - postgres-master
      - redis-cluster
    networks:
      - gongbu-network
    restart: unless-stopped

  api-gateway-2:
    build:
      context: ../services/api-gateway
      dockerfile: Dockerfile.prod
    container_name: gongbu-api-gateway-2
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DATABASE_URL=postgresql://gongbu_enterprise_user:ultra-secure-enterprise-password-64-chars@postgres-master:5432/gongbu_enterprise
      - REDIS_URL=redis://:enterprise-redis-password-32-chars@redis-cluster:6379
    depends_on:
      - postgres-master
      - redis-cluster
    networks:
      - gongbu-network
    restart: unless-stopped

  api-gateway-3:
    build:
      context: ../services/api-gateway
      dockerfile: Dockerfile.prod
    container_name: gongbu-api-gateway-3
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DATABASE_URL=postgresql://gongbu_enterprise_user:ultra-secure-enterprise-password-64-chars@postgres-master:5432/gongbu_enterprise
      - REDIS_URL=redis://:enterprise-redis-password-32-chars@redis-cluster:6379
    depends_on:
      - postgres-master
      - redis-cluster
    networks:
      - gongbu-network
    restart: unless-stopped

  # Auth Service (2 instances)
  auth-service-1:
    build:
      context: ../services/auth-service
      dockerfile: Dockerfile.prod
    container_name: gongbu-auth-service-1
    environment:
      - NODE_ENV=production
      - PORT=3001
      - DATABASE_URL=postgresql://gongbu_enterprise_user:ultra-secure-enterprise-password-64-chars@postgres-master:5432/gongbu_enterprise
      - REDIS_URL=redis://:enterprise-redis-password-32-chars@redis-cluster:6379
    depends_on:
      - postgres-master
      - redis-cluster
    networks:
      - gongbu-network
    restart: unless-stopped

  auth-service-2:
    build:
      context: ../services/auth-service
      dockerfile: Dockerfile.prod
    container_name: gongbu-auth-service-2
    environment:
      - NODE_ENV=production
      - PORT=3001
      - DATABASE_URL=postgresql://gongbu_enterprise_user:ultra-secure-enterprise-password-64-chars@postgres-master:5432/gongbu_enterprise
      - REDIS_URL=redis://:enterprise-redis-password-32-chars@redis-cluster:6379
    depends_on:
      - postgres-master
      - redis-cluster
    networks:
      - gongbu-network
    restart: unless-stopped

  # Database Master
  postgres-master:
    image: postgres:15-alpine
    container_name: gongbu-postgres-master
    environment:
      - POSTGRES_DB=gongbu_enterprise
      - POSTGRES_USER=gongbu_enterprise_user
      - POSTGRES_PASSWORD=ultra-secure-enterprise-password-64-chars
      - POSTGRES_REPLICATION_USER=replicator
      - POSTGRES_REPLICATION_PASSWORD=replication-password-32-chars
    volumes:
      - postgres_master_data:/var/lib/postgresql/data
      - ./database/postgres-master.conf:/etc/postgresql/postgresql.conf:ro
      - ./database/pg_hba.conf:/etc/postgresql/pg_hba.conf:ro
    ports:
      - "5432:5432"
    networks:
      - gongbu-network
    restart: unless-stopped

  # Database Slave
  postgres-slave:
    image: postgres:15-alpine
    container_name: gongbu-postgres-slave
    environment:
      - POSTGRES_DB=gongbu_enterprise
      - POSTGRES_USER=gongbu_enterprise_user
      - POSTGRES_PASSWORD=ultra-secure-enterprise-password-64-chars
      - POSTGRES_MASTER_HOST=postgres-master
      - POSTGRES_MASTER_PORT=5432
      - POSTGRES_REPLICATION_USER=replicator
      - POSTGRES_REPLICATION_PASSWORD=replication-password-32-chars
    volumes:
      - postgres_slave_data:/var/lib/postgresql/data
      - ./database/postgres-slave.conf:/etc/postgresql/postgresql.conf:ro
      - ./database/pg_hba.conf:/etc/postgresql/pg_hba.conf:ro
    depends_on:
      - postgres-master
    networks:
      - gongbu-network
    restart: unless-stopped

  # Redis Cluster
  redis-cluster:
    image: redis:7-alpine
    container_name: gongbu-redis-cluster
    command: redis-server /etc/redis/redis-cluster.conf
    volumes:
      - redis_cluster_data:/data
      - ./redis/redis-cluster.conf:/etc/redis/redis-cluster.conf:ro
    ports:
      - "6379:6379"
    networks:
      - gongbu-network
    restart: unless-stopped

  # Monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: gongbu-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - gongbu-network
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: gongbu-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=enterprise_grafana_password
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    depends_on:
      - prometheus
    networks:
      - gongbu-network
    restart: unless-stopped

volumes:
  postgres_master_data:
  postgres_slave_data:
  redis_cluster_data:
  prometheus_data:
  grafana_data:

networks:
  gongbu-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
