name: Deploy to VPS

on:
  workflow_dispatch:  # Только ручной запуск через GitHub UI
  # push:             # Автоматический деплой отключен
  #   branches: [ main ]
  #   paths-ignore:
  #     - '**.md'
  #     - 'docs/**'

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Deploy to VPS
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USER }}
        key: ${{ secrets.VPS_SSH_KEY }}
        script: |
          cd /home/deploy/gongbu-platform || (git clone https://github.com/appletownworld/gongbu-platform.git /home/deploy/gongbu-platform && cd /home/deploy/gongbu-platform)
          git pull origin main
          docker-compose -f docker-compose.simple.yml down || true
          docker-compose -f docker-compose.simple.yml build --no-cache
          docker-compose -f docker-compose.simple.yml up -d
          # Wait for healthcheck to be ready (Docker Compose v1.29 compatibility)
          echo "⏳ Waiting for containers to be healthy..."
          for i in {1..60}; do
            if docker inspect --format='{{.State.Health.Status}}' gongbu_nginx 2>/dev/null | grep -q "healthy"; then
              echo "✅ Nginx is healthy"; break
            fi
            echo "⏳ Waiting for nginx healthcheck ($i/60)..."
            sleep 2
          done
          docker system prune -f

    - name: Wait for HTTPS (smart retry)
      run: |
        echo "🔍 Waiting for HTTPS endpoint to be ready..."
        curl -fsS https://gongbu.appletownworld.com/health \
          --retry 20 --retry-all-errors --retry-delay 5 --max-time 10 \
          --retry-connrefused || {
          echo "❌ HTTPS health check failed, trying HTTP fallback..."
          curl -fsS http://gongbu.appletownworld.com/health \
            --retry 10 --retry-all-errors --retry-delay 3 --max-time 8
        }

    - name: Notify Telegram
      if: always()
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_CHAT_ID }}
        token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        message: |
          🚀 Deploy Status: ${{ job.status }}
          📦 Repository: gongbu-platform
          🌐 Environment: Production
          🔗 URL: ${{ secrets.API_BASE_URL }}