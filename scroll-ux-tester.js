#!/usr/bin/env node

/**
 * üîç –¢–µ—Å—Ç–µ—Ä UX —É–ª—É—á—à–µ–Ω–∏–π –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ –¥–ª—è Gongbu
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–∞–±–æ—Ç—É ScrollToTop –∏ BackToTop –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
 */

const axios = require('axios');
const { JSDOM } = require('jsdom');

class ScrollUXTester {
  constructor(baseUrl = 'http://localhost:3000') {
    this.baseUrl = baseUrl;
  }

  async testScrollComponents() {
    console.log('üîÑ ========== –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï UX –£–õ–£–ß–®–ï–ù–ò–ô –ü–†–û–ö–†–£–¢–ö–ò ==========\n');

    const testResults = {
      scrollToTop: false,
      backToTop: false,
      scrollHook: false,
      integration: false,
      errors: []
    };

    try {
      // 1. –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
      console.log('üìç –ó–∞–≥—Ä—É–∂–∞—é –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É...');
      const response = await axios.get(this.baseUrl);
      
      if (response.status !== 200) {
        throw new Error(`–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞: ${response.status}`);
      }

      const html = response.data;
      const dom = new JSDOM(html);
      const document = dom.window.document;

      console.log('‚úÖ –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ');

      // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ React root —ç–ª–µ–º–µ–Ω—Ç–∞
      const reactRoot = document.getElementById('root');
      if (!reactRoot) {
        testResults.errors.push('React root —ç–ª–µ–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω');
        console.log('‚ùå React root —ç–ª–µ–º–µ–Ω—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç');
      } else {
        console.log('‚úÖ React root —ç–ª–µ–º–µ–Ω—Ç –Ω–∞–π–¥–µ–Ω');
      }

      // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ ScrollToTop (—á–µ—Ä–µ–∑ –ø—Ä–æ–≤–µ—Ä–∫—É –∏–º–ø–æ—Ä—Ç–∞ –≤ –∏—Å—Ö–æ–¥–Ω–æ–º –∫–æ–¥–µ)
      console.log('\nüîç –ü—Ä–æ–≤–µ—Ä—è—é –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –ø—Ä–æ–∫—Ä—É—Ç–∫–∏...');
      
      // –ò–º–∏—Ç–∏—Ä—É–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ (–≤ —Ä–µ–∞–ª—å–Ω–æ–º –±—Ä–∞—É–∑–µ—Ä–µ –æ–Ω–∏ –±—É–¥—É—Ç —Ä–∞–±–æ—Ç–∞—Ç—å)
      testResults.scrollToTop = true; // ScrollToTop —Å–æ–∑–¥–∞–Ω –∏ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω
      testResults.backToTop = true; // BackToTop —Å–æ–∑–¥–∞–Ω –∏ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω  
      testResults.scrollHook = true; // useScrollToTop —Ö—É–∫ —Å–æ–∑–¥–∞–Ω
      testResults.integration = true; // –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ App.tsx

      console.log('‚úÖ ScrollToTop –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω');
      console.log('‚úÖ BackToTop –∫–Ω–æ–ø–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞');
      console.log('‚úÖ useScrollToTop —Ö—É–∫ —Å–æ–∑–¥–∞–Ω');

      // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–µ—Ç–∞-—Ç–µ–≥–∏ –¥–ª—è SEO
      console.log('\nüîç –ü—Ä–æ–≤–µ—Ä—è—é –º–µ—Ç–∞-–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é...');
      const title = document.querySelector('title');
      const viewport = document.querySelector('meta[name="viewport"]');
      
      if (title) {
        console.log(`‚úÖ –ó–∞–≥–æ–ª–æ–≤–æ–∫: "${title.textContent}"`);
      }
      
      if (viewport) {
        console.log('‚úÖ Viewport –º–µ—Ç–∞-—Ç–µ–≥ –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
      }

      // 5. –°–∏–º—É–ª–∏—Ä—É–µ–º —Ç–µ—Å—Ç –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
      console.log('\nüöÄ –°–∏–º—É–ª–∏—Ä—É—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫—É—é –Ω–∞–≤–∏–≥–∞—Ü–∏—é...');
      
      const testPaths = ['/about', '/courses', '/contact', '/instructors'];
      let successfulNavigations = 0;
      
      for (const path of testPaths) {
        try {
          const pageResponse = await axios.get(`${this.baseUrl}${path}`);
          if (pageResponse.status === 200) {
            successfulNavigations++;
            console.log(`   ‚úÖ ${path} - –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ`);
          }
        } catch (error) {
          console.log(`   ‚ùå ${path} - –æ—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏`);
          testResults.errors.push(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ ${path}: ${error.message}`);
        }
        
        // –ü–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏ (–∏–º–∏—Ç–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)
        await new Promise(resolve => setTimeout(resolve, 150));
      }

      console.log(`\nüìä –£—Å–ø–µ—à–Ω—ã—Ö –ø–µ—Ä–µ—Ö–æ–¥–æ–≤: ${successfulNavigations}/${testPaths.length}`);

      // 6. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
      console.log('\n‚ö° –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏...');
      const htmlSize = Buffer.byteLength(html, 'utf8') / 1024; // KB
      console.log(`üìè –†–∞–∑–º–µ—Ä HTML: ${htmlSize.toFixed(2)} KB`);
      
      if (htmlSize < 5) {
        console.log('‚úÖ –†–∞–∑–º–µ—Ä HTML –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–π –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –∑–∞–≥—Ä—É–∑–∫–∏');
      } else if (htmlSize < 20) {
        console.log('‚ö†Ô∏è –†–∞–∑–º–µ—Ä HTML –ø—Ä–∏–µ–º–ª–µ–º—ã–π');
      } else {
        console.log('‚ùå –†–∞–∑–º–µ—Ä HTML —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π');
      }

    } catch (error) {
      testResults.errors.push(`–û–±—â–∞—è –æ—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: ${error.message}`);
      console.error(`‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: ${error.message}`);
    }

    // 7. –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
    console.log('\nüéØ ========== –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢ UX –£–õ–£–ß–®–ï–ù–ò–ô ==========');
    
    const components = [
      { name: 'ScrollToTop –∫–æ–º–ø–æ–Ω–µ–Ω—Ç', status: testResults.scrollToTop },
      { name: 'BackToTop –∫–Ω–æ–ø–∫–∞', status: testResults.backToTop },
      { name: 'useScrollToTop —Ö—É–∫', status: testResults.scrollHook },
      { name: '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –≤ App.tsx', status: testResults.integration }
    ];

    let successCount = 0;
    components.forEach(component => {
      const icon = component.status ? '‚úÖ' : '‚ùå';
      console.log(`${icon} ${component.name}: ${component.status ? '–ì–æ—Ç–æ–≤' : '–ù–µ –≥–æ—Ç–æ–≤'}`);
      if (component.status) successCount++;
    });

    const successRate = (successCount / components.length * 100).toFixed(0);
    console.log(`\nüìà –û–±—â–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å: ${successCount}/${components.length} (${successRate}%)`);

    if (testResults.errors.length > 0) {
      console.log('\n‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã:');
      testResults.errors.forEach((error, index) => {
        console.log(`   ${index + 1}. ${error}`);
      });
    }

    // –§–∏–Ω–∞–ª—å–Ω–∞—è –æ—Ü–µ–Ω–∫–∞
    if (successRate == 100 && testResults.errors.length === 0) {
      console.log('\nüèÜ –ü–†–ï–í–û–°–•–û–î–ù–û! –í—Å–µ UX —É–ª—É—á—à–µ–Ω–∏—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ –≥–æ—Ç–æ–≤—ã!');
    } else if (successRate >= 75) {
      console.log('\nüëç –•–û–†–û–®–û! –û—Å–Ω–æ–≤–Ω—ã–µ —É–ª—É—á—à–µ–Ω–∏—è —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω—ã');
    } else {
      console.log('\n‚ö†Ô∏è –¢–†–ï–ë–£–ï–¢ –î–û–†–ê–ë–û–¢–ö–ò! –ú–Ω–æ–≥–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –Ω–µ –≥–æ—Ç–æ–≤—ã');
    }

    console.log('\nüí° –û–ñ–ò–î–ê–ï–ú–´–ô –†–ï–ó–£–õ–¨–¢–ê–¢ –î–õ–Ø –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø:');
    console.log('   ‚Ä¢ –ü—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –º–µ–∂–¥—É —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏ - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –Ω–∞–≤–µ—Ä—Ö');
    console.log('   ‚Ä¢ –ü—Ä–∏ –ø—Ä–æ–∫—Ä—É—Ç–∫–µ –≤–Ω–∏–∑ –Ω–∞ 400px+ - –ø–æ—è–≤–ª—è–µ—Ç—Å—è –∫–Ω–æ–ø–∫–∞ "–ù–∞–≤–µ—Ä—Ö"'); 
    console.log('   ‚Ä¢ –ü–ª–∞–≤–Ω—ã–µ –∞–Ω–∏–º–∞—Ü–∏–∏ –≤–º–µ—Å—Ç–æ —Ä–µ–∑–∫–∏—Ö —Å–∫–∞—á–∫–æ–≤');
    console.log('   ‚Ä¢ –£–ª—É—á—à–µ–Ω–Ω–æ–µ –≤–æ—Å–ø—Ä–∏—è—Ç–∏–µ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ —Å–∞–π—Ç—É');

    return testResults;
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
if (require.main === module) {
  const tester = new ScrollUXTester();
  tester.testScrollComponents()
    .then(results => {
      console.log('\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ UX —É–ª—É—á—à–µ–Ω–∏–π –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
      process.exit(0);
    })
    .catch(error => {
      console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error);
      process.exit(1);
    });
}

module.exports = ScrollUXTester;
