import React, { useState, useEffect } from 'react'
import { Link, useNavigate, useLocation } from 'react-router-dom'
import { AcademicCapIcon, EyeIcon, EyeSlashIcon, ChatBubbleLeftEllipsisIcon, BoltIcon, ShieldCheckIcon, ArrowRightIcon, CheckCircleIcon, ExclamationTriangleIcon } from '@heroicons/react/24/outline'
import { useAuth } from '@/contexts/AuthContext'
import toast from 'react-hot-toast'

const LoginPage: React.FC = () => {
  const { login, isLoading, user } = useAuth()
  const navigate = useNavigate()
  const location = useLocation()
  
  const [formData, setFormData] = useState({
    initData: '',
    remember: false,
  })
  const [showInitData, setShowInitData] = useState(false)
  const [showTechnicalLogin, setShowTechnicalLogin] = useState(false)
  const [isInTelegram, setIsInTelegram] = useState(false)

  const from = location.state?.from?.pathname || '/dashboard'

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø—É—â–µ–Ω—ã –ª–∏ –º—ã –∏–∑ Telegram WebApp
  useEffect(() => {
    const checkTelegramEnvironment = () => {
      // @ts-ignore
      return !!(window.Telegram && window.Telegram.WebApp)
    }
    
    setIsInTelegram(checkTelegramEnvironment())
    
    // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –µ–≥–æ
    if (user) {
      navigate(from, { replace: true })
    }
  }, [user, navigate, from])

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault()
    
    if (!formData.initData.trim()) {
      toast.error('–í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –æ—Ç Telegram WebApp')
      return
    }

    try {
      await login(formData.initData)
      navigate(from, { replace: true })
    } catch (error) {
      // Error is handled in AuthContext
    }
  }

  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const { name, value, type, checked } = e.target
    setFormData(prev => ({
      ...prev,
      [name]: type === 'checkbox' ? checked : value
    }))
  }

  // Mock Telegram WebApp data for development
  const generateMockInitData = () => {
    const mockUser = {
      id: Date.now(),
      first_name: 'Test',
      last_name: 'User',
      username: 'testuser',
      language_code: 'ru'
    }
    
    const mockInitData = `user=${encodeURIComponent(JSON.stringify(mockUser))}&auth_date=${Math.floor(Date.now() / 1000)}&hash=mock_hash_for_development`
    
    setFormData(prev => ({
      ...prev,
      initData: mockInitData
    }))
    
    toast.success('–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ Telegram WebApp')
  }

  // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–ø—É—Å—Ç–∏–ª —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤ Telegram WebApp
  if (isInTelegram) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 text-secondary-900 py-16 flex items-center justify-center">
        <div className="container mx-auto px-6 max-w-2xl">
          <div className="bg-white p-8 md:p-12 rounded-xl shadow-lg border border-secondary-200 text-center animate-fade-in">
            <ChatBubbleLeftEllipsisIcon className="h-16 w-16 text-primary-500 mx-auto mb-6" />
            <h1 className="text-3xl md:text-4xl font-extrabold text-primary-700 mb-6 leading-tight">
              –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Gongbu!
            </h1>
            <p className="text-lg text-secondary-700 mb-8">
              –í—ã –∑–∞–ø—É—Å—Ç–∏–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —á–µ—Ä–µ–∑ Telegram WebApp. –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø—Ä–æ–∏–∑–æ–π–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.
            </p>
            
            <div className="bg-gradient-to-r from-primary-50 to-blue-50 border border-primary-200 rounded-lg p-6 mb-8">
              <div className="flex items-center justify-center space-x-2 mb-4">
                <BoltIcon className="h-6 w-6 text-primary-600" />
                <h3 className="font-semibold text-primary-800">–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≤—Ö–æ–¥</h3>
              </div>
              <p className="text-sm text-primary-700">
                –°–∏—Å—Ç–µ–º–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –¥–∞–Ω–Ω—ã–µ –≤–∞—à–µ–≥–æ Telegram –∞–∫–∫–∞—É–Ω—Ç–∞ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏. 
                –ù–∏–∫–∞–∫–∏—Ö –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è.
              </p>
            </div>

            {isLoading ? (
              <div className="flex items-center justify-center space-x-3 text-primary-600">
                <div className="animate-spin rounded-full h-6 w-6 border-b-2 border-primary-600"></div>
                <span className="font-medium">–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –≤—Ö–æ–¥...</span>
              </div>
            ) : (
              <div className="text-secondary-600">
                <p className="mb-4">–ï—Å–ª–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–µ –Ω–∞—á–∞–ª–∞—Å—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏:</p>
                <button
                  onClick={() => setShowTechnicalLogin(true)}
                  className="text-sm text-primary-600 hover:text-primary-700 underline"
                >
                  –ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫—É—é —Ñ–æ—Ä–º—É –≤—Ö–æ–¥–∞
                </button>
              </div>
            )}
          </div>
        </div>
      </div>
    )
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 text-secondary-900 py-16">
      <div className="container mx-auto px-6 max-w-4xl">
        {/* Header */}
        <div className="text-center mb-12">
          <Link to="/" className="inline-flex items-center space-x-2 mb-6">
            <AcademicCapIcon className="h-12 w-12 text-primary-600" />
            <span className="text-2xl font-bold text-gradient">Gongbu</span>
          </Link>
          <h1 className="text-4xl md:text-5xl font-extrabold text-primary-700 mb-6 leading-tight animate-fade-in-down">
            –í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É
          </h1>
          <p className="text-lg md:text-xl text-secondary-700 mb-8 max-w-2xl mx-auto">
            –î–ª—è –≤—Ö–æ–¥–∞ –≤ Gongbu –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –±–µ–∑–æ–ø–∞—Å–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —á–µ—Ä–µ–∑ Telegram
          </p>
        </div>

        {/* Main Content */}
        <div className="grid grid-cols-1 lg:grid-cols-2 gap-12 mb-12">
          {/* How to Login Section */}
          <div className="bg-white p-8 md:p-10 rounded-xl shadow-lg border border-secondary-200 animate-fade-in-left">
            <h2 className="text-2xl md:text-3xl font-bold text-secondary-800 mb-8">–ö–∞–∫ –≤–æ–π—Ç–∏ –≤ Gongbu?</h2>
            <ol className="list-decimal list-inside text-secondary-600 space-y-4 text-lg mb-8">
              <li className="flex items-start">
                <span className="mr-3">1.</span>
                <div>
                  <strong className="text-secondary-800">–ù–∞–π–¥–∏—Ç–µ –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞ –≤ Telegram:</strong>
                  <br />
                  <a href="https://t.me/at_gongbubot" target="_blank" rel="noopener noreferrer" className="text-primary-600 hover:underline font-medium">
                    @at_gongbubot
                  </a>
                </div>
              </li>
              <li className="flex items-start">
                <span className="mr-3">2.</span>
                <div>
                  <strong className="text-secondary-800">–ó–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π:</strong>
                  <br />
                  <code className="bg-secondary-100 px-2 py-1 rounded text-sm">/start</code> –∏–ª–∏ <code className="bg-secondary-100 px-2 py-1 rounded text-sm">/courses</code>
                </div>
              </li>
              <li className="flex items-start">
                <span className="mr-3">3.</span>
                <div>
                  <strong className="text-secondary-800">–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É</strong>
                  <br />
                  <span className="inline-flex items-center bg-primary-100 text-primary-800 px-3 py-1 rounded-full text-sm font-medium mt-1">
                    üöÄ –ù–∞—á–∞—Ç—å –∏–∑—É—á–µ–Ω–∏–µ
                  </span>
                </div>
              </li>
              <li className="flex items-start">
                <span className="mr-3">4.</span>
                <div>
                  <strong className="text-secondary-800">–ì–æ—Ç–æ–≤–æ!</strong>
                  <br />
                  –í—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤–æ–π–¥–µ—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É
                </div>
              </li>
            </ol>

            <a
              href="https://t.me/at_gongbubot"
              target="_blank" 
              rel="noopener noreferrer"
              className="inline-flex items-center justify-center px-8 py-3 border border-transparent text-base font-medium rounded-full shadow-lg text-white bg-primary-600 hover:bg-primary-700 transition-all duration-300 ease-in-out transform hover:scale-105"
            >
              –ü–µ—Ä–µ–π—Ç–∏ –∫ Telegram –±–æ—Ç—É <ArrowRightIcon className="ml-3 h-5 w-5" />
            </a>
          </div>

          {/* Benefits Section */}
          <div className="bg-white p-8 md:p-10 rounded-xl shadow-lg border border-secondary-200 animate-fade-in-right">
            <h2 className="text-2xl md:text-3xl font-bold text-secondary-800 mb-8">–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –≤—Ö–æ–¥–∞ —á–µ—Ä–µ–∑ Telegram</h2>
            <div className="space-y-6">
              {[
                { icon: BoltIcon, title: "–ú–≥–Ω–æ–≤–µ–Ω–Ω–æ", description: "–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∑–∞ –º–µ–Ω–µ–µ —á–µ–º 1 —Å–µ–∫—É–Ω–¥—É –±–µ–∑ —Ñ–æ—Ä–º –∏ –ø–∞—Ä–æ–ª–µ–π" },
                { icon: ShieldCheckIcon, title: "–ë–µ–∑–æ–ø–∞—Å–Ω–æ", description: "–ò—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π Telegram WebApp API –¥–ª—è –∑–∞—â–∏—Ç—ã –¥–∞–Ω–Ω—ã—Ö" },
                { icon: CheckCircleIcon, title: "–ü—Ä–æ—Å—Ç–æ", description: "–û–¥–∏–Ω –∫–ª–∏–∫ –≤ Telegram ‚Äî –∏ –≤—ã —É–∂–µ –≤ —Å–∏—Å—Ç–µ–º–µ –æ–±—É—á–µ–Ω–∏—è" },
                { icon: ChatBubbleLeftEllipsisIcon, title: "–£–¥–æ–±–Ω–æ", description: "–í—Å–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∏ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –ø—Ä—è–º–æ –≤ Telegram" }
              ].map((benefit, index) => (
                <div key={index} className="flex items-start space-x-4">
                  <benefit.icon className="w-8 h-8 text-primary-500 flex-shrink-0 mt-1" />
                  <div>
                    <h3 className="text-lg font-semibold text-secondary-800 mb-2">{benefit.title}</h3>
                    <p className="text-secondary-600">{benefit.description}</p>
                  </div>
                </div>
              ))}
            </div>
          </div>
        </div>

        {/* Technical Login Section (Hidden by default) */}
        {showTechnicalLogin && (
          <div className="bg-white rounded-xl shadow-lg border border-warning-200 p-8 mb-8">
            <div className="flex items-center space-x-2 mb-6">
              <ExclamationTriangleIcon className="h-6 w-6 text-warning-600" />
              <h3 className="text-xl font-bold text-warning-800">–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è —Ñ–æ—Ä–º–∞ –≤—Ö–æ–¥–∞</h3>
            </div>
            <p className="text-sm text-warning-700 mb-6">
              ‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç—É —Ñ–æ—Ä–º—É —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≤—Ö–æ–¥ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç. –í –æ–±—ã—á–Ω—ã—Ö —É—Å–ª–æ–≤–∏—è—Ö –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —á–µ—Ä–µ–∑ Telegram WebApp.
            </p>
            
            <form onSubmit={handleSubmit} className="space-y-6">
              {/* Telegram Init Data */}
              <div>
                <label htmlFor="initData" className="block text-sm font-medium text-secondary-700 mb-2">
                  –î–∞–Ω–Ω—ã–µ –æ—Ç Telegram WebApp
                </label>
                <div className="relative">
                  <input
                    id="initData"
                    name="initData"
                    type={showInitData ? 'text' : 'password'}
                    value={formData.initData}
                    onChange={handleChange}
                    placeholder="user=%7B%22id%22%3A..."
                    className="input pr-12"
                    required
                  />
                  <button
                    type="button"
                    onClick={() => setShowInitData(!showInitData)}
                    className="absolute right-3 top-1/2 transform -translate-y-1/2 text-secondary-400 hover:text-secondary-600"
                  >
                    {showInitData ? (
                      <EyeSlashIcon className="h-5 w-5" />
                    ) : (
                      <EyeIcon className="h-5 w-5" />
                    )}
                  </button>
                </div>
              </div>

              {/* Development Helper */}
              <div className="bg-blue-50 border border-blue-200 rounded-lg p-4">
                <h4 className="text-sm font-medium text-blue-800 mb-2">
                  üîß –î–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
                </h4>
                <p className="text-xs text-blue-700 mb-3">
                  –í production –¥–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç Telegram WebApp
                </p>
                <button
                  type="button"
                  onClick={generateMockInitData}
                  className="text-xs bg-blue-600 text-white px-3 py-1 rounded hover:bg-blue-700 transition-colors"
                >
                  –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
                </button>
              </div>

              <div className="flex items-center justify-between">
                <div className="flex items-center">
                  <input
                    id="remember"
                    name="remember"
                    type="checkbox"
                    checked={formData.remember}
                    onChange={handleChange}
                    className="h-4 w-4 text-primary-600 focus:ring-primary-500 border-secondary-300 rounded"
                  />
                  <label htmlFor="remember" className="ml-2 block text-sm text-secondary-700">
                    –ó–∞–ø–æ–º–Ω–∏—Ç—å –º–µ–Ω—è
                  </label>
                </div>

                <button
                  type="button"
                  onClick={() => setShowTechnicalLogin(false)}
                  className="text-sm text-secondary-500 hover:text-secondary-700"
                >
                  –°–∫—Ä—ã—Ç—å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫—É—é —Ñ–æ—Ä–º—É
                </button>
              </div>

              <button
                type="submit"
                disabled={isLoading}
                className="w-full btn-primary py-3 text-base"
              >
                {isLoading ? (
                  <div className="flex items-center justify-center space-x-2">
                    <div className="animate-spin rounded-full h-5 w-5 border-b-2 border-white"></div>
                    <span>–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è...</span>
                  </div>
                ) : (
                  '–í–æ–π—Ç–∏ —á–µ—Ä–µ–∑ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫—É—é —Ñ–æ—Ä–º—É'
                )}
              </button>
            </form>
          </div>
        )}

        {/* Show Technical Login Button */}
        {!showTechnicalLogin && (
          <div className="text-center mb-8">
            <button
              onClick={() => setShowTechnicalLogin(true)}
              className="text-sm text-secondary-500 hover:text-secondary-700 underline"
            >
              –í–æ–∑–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –≤—Ö–æ–¥–æ–º?
            </button>
          </div>
        )}

        {/* FAQ Section */}
        <div className="bg-secondary-50 rounded-xl p-8">
          <h2 className="text-2xl font-bold text-secondary-800 mb-6 text-center">–ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã</h2>
          <div className="space-y-4 max-w-3xl mx-auto">
            <div className="bg-white p-5 rounded-lg shadow-sm border border-secondary-100">
              <h3 className="font-semibold text-secondary-700 mb-2">ü§î –ü–æ—á–µ–º—É –Ω–µ—Ç –æ–±—ã—á–Ω–æ–≥–æ –≤—Ö–æ–¥–∞ –ø–æ email/–ø–∞—Ä–æ–ª—é?</h3>
              <p className="text-secondary-600">
                –ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º Telegram –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∏ —É–¥–æ–±—Å—Ç–≤–∞. –≠—Ç–æ –∏–∑–±–∞–≤–ª—è–µ—Ç –æ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –∑–∞–ø–æ–º–∏–Ω–∞—Ç—å –ø–∞—Ä–æ–ª–∏ –∏ –∑–∞—â–∏—â–∞–µ—Ç –æ—Ç –≤–∑–ª–æ–º–∞ –∞–∫–∫–∞—É–Ω—Ç–æ–≤.
              </p>
            </div>
            <div className="bg-white p-5 rounded-lg shadow-sm border border-secondary-100">
              <h3 className="font-semibold text-secondary-700 mb-2">üîí –ù–∞—Å–∫–æ–ª—å–∫–æ —ç—Ç–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ?</h3>
              <p className="text-secondary-600">
                –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —á–µ—Ä–µ–∑ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π Telegram WebApp API, –∫–æ—Ç–æ—Ä—ã–π –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –±–∞–Ω–∫–æ–≤—Å–∫–∏–π —É—Ä–æ–≤–µ–Ω—å –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –≤–∞—à–∏—Ö –¥–∞–Ω–Ω—ã—Ö.
              </p>
            </div>
            <div className="bg-white p-5 rounded-lg shadow-sm border border-secondary-100">
              <h3 className="font-semibold text-secondary-700 mb-2">üì± –ß—Ç–æ –µ—Å–ª–∏ —É –º–µ–Ω—è –Ω–µ—Ç Telegram?</h3>
              <p className="text-secondary-600">
                Telegram ‚Äî —ç—Ç–æ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä, –¥–æ—Å—Ç—É–ø–Ω—ã–π –Ω–∞ –≤—Å–µ—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞—Ö. <a href="https://telegram.org/" target="_blank" rel="noopener noreferrer" className="text-primary-600 hover:underline">–°–∫–∞—á–∞–π—Ç–µ –µ–≥–æ –∑–¥–µ—Å—å</a> –∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –∑–∞ 1 –º–∏–Ω—É—Ç—É.
              </p>
            </div>
          </div>
        </div>

        {/* Additional Links */}
        <div className="text-center space-y-4 mt-8">
          <p className="text-sm text-secondary-600">
            –ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å? <Link to="/contact" className="text-primary-600 hover:underline">–°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏</Link>
          </p>
          <Link to="/" className="text-secondary-500 hover:text-secondary-700 text-sm">
            ‚Üê –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é
          </Link>
        </div>
      </div>
    </div>
  )
}

export default LoginPage
