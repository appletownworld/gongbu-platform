/**
 * üîê Telegram WebApp –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
 * –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç/–∞–≤—Ç–æ—Ä–∏–∑—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —á–µ—Ä–µ–∑ Telegram –¥–∞–Ω–Ω—ã–µ
 */

import apiClient from './api'

export interface TelegramUser {
  id: number
  first_name: string
  last_name?: string
  username?: string
  language_code?: string
  photo_url?: string
  is_premium?: boolean
}

export interface TelegramWebAppInitData {
  user?: TelegramUser
  query_id?: string
  auth_date?: number
  hash?: string
}

export interface AuthUser {
  id: string
  telegramId: number
  username?: string
  firstName: string
  lastName?: string
  role: string
  subscription: string
  isActive: boolean
  accessToken: string
  refreshToken: string
}

/**
 * –ü–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ Telegram WebApp
 */
export function getTelegramUser(): TelegramUser | null {
  if (typeof window === 'undefined') return null
  
  const tg = window.Telegram?.WebApp
  if (!tg) return null
  
  return tg.initDataUnsafe?.user || null
}

/**
 * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –∑–∞–ø—É—â–µ–Ω–æ –ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ Telegram WebApp
 */
export function isTelegramWebApp(): boolean {
  return typeof window !== 'undefined' && !!window.Telegram?.WebApp
}

/**
 * –ü–æ–ª—É—á–∏—Ç—å –ø–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Telegram WebApp
 */
export function getTelegramInitData(): TelegramWebAppInitData | null {
  if (typeof window === 'undefined') return null
  
  const tg = window.Telegram?.WebApp
  if (!tg) return null
  
  return {
    user: tg.initDataUnsafe?.user,
    query_id: (tg.initDataUnsafe as any)?.query_id,
    auth_date: tg.initDataUnsafe?.auth_date,
    hash: tg.initDataUnsafe?.hash
  }
}

/**
 * –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —á–µ—Ä–µ–∑ Telegram WebApp
 * –°–æ–∑–¥–∞–µ—Ç –∏–ª–∏ –ø–æ–ª—É—á–∞–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
export async function autoAuthWithTelegram(): Promise<AuthUser | null> {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ Telegram WebApp
    if (!isTelegramWebApp()) {
      console.log('üîç –ù–µ Telegram WebApp - –∏—Å–ø–æ–ª—å–∑—É–µ–º –≥–æ—Å—Ç–µ–≤–æ–π —Ä–µ–∂–∏–º')
      return null
    }

    const telegramUser = getTelegramUser()
    if (!telegramUser) {
      console.log('‚ùå –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Telegram –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã')
      return null
    }

    console.log('üîê –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —á–µ—Ä–µ–∑ Telegram...')
    console.log('üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:', {
      id: telegramUser.id,
      name: `${telegramUser.first_name} ${telegramUser.last_name || ''}`,
      username: telegramUser.username
    })

    // –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª–Ω—ã–µ initData –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    const initData = getTelegramInitData()
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é —á–µ—Ä–µ–∑ Telegram
    const response = await apiClient.post<{ user: AuthUser }>('/auth/telegram-login', {
      telegramUser: {
        id: telegramUser.id,
        first_name: telegramUser.first_name,
        last_name: telegramUser.last_name,
        username: telegramUser.username,
        language_code: telegramUser.language_code,
        photo_url: telegramUser.photo_url,
        is_premium: telegramUser.is_premium
      },
      initData: {
        query_id: initData?.query_id,
        auth_date: initData?.auth_date,
        hash: initData?.hash
      },
      source: 'webapp'
    })

    const authUser = response.data.user
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–∫–µ–Ω—ã –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
    localStorage.setItem('accessToken', authUser.accessToken)
    localStorage.setItem('refreshToken', authUser.refreshToken)
    localStorage.setItem('user', JSON.stringify(authUser))

    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º API –∫–ª–∏–µ–Ω—Ç –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
    apiClient.defaults.headers.common['Authorization'] = `Bearer ${authUser.accessToken}`

    console.log('‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!')
    console.log('üë§ –ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –∫–∞–∫:', authUser.firstName, authUser.lastName || '')
    console.log('üé≠ –†–æ–ª—å:', authUser.role)
    
    return authUser

  } catch (error: any) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:', error)
    
    if (error.response?.status === 401) {
      console.log('üîê –ù–µ–æ–±—Ö–æ–¥–∏–º–∞ –ø–æ–≤—Ç–æ—Ä–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è')
    } else if (error.response?.status === 403) {
      console.log('üö´ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω')
    } else {
      console.log('‚ö†Ô∏è –†–∞–±–æ—Ç–∞–µ–º –≤ –≥–æ—Å—Ç–µ–≤–æ–º —Ä–µ–∂–∏–º–µ')
    }
    
    return null
  }
}

/**
 * –ü–æ–ª—É—á–∏—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ localStorage
 */
export function getSavedUser(): AuthUser | null {
  try {
    const userStr = localStorage.getItem('user')
    return userStr ? JSON.parse(userStr) : null
  } catch {
    return null
  }
}

/**
 * –û—á–∏—Å—Ç–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
 */
export function clearAuth(): void {
  localStorage.removeItem('accessToken')
  localStorage.removeItem('refreshToken') 
  localStorage.removeItem('user')
  delete apiClient.defaults.headers.common['Authorization']
}

/**
 * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
 */
export function isAuthenticated(): boolean {
  const token = localStorage.getItem('accessToken')
  const user = getSavedUser()
  return !!(token && user)
}

/**
 * –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–æ–≤
 */
export function setupTokenRefresh(): void {
  apiClient.interceptors.response.use(
    (response: any) => response,
    async (error: any) => {
      if (error.response?.status === 401) {
        const refreshToken = localStorage.getItem('refreshToken')
        
        if (refreshToken) {
          try {
            console.log('üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞...')
            
            const response = await apiClient.post('/auth/refresh', {
              refreshToken
            })
            
            const { accessToken, user } = response.data
            
            localStorage.setItem('accessToken', accessToken)
            localStorage.setItem('user', JSON.stringify(user))
            apiClient.defaults.headers.common['Authorization'] = `Bearer ${accessToken}`
            
            console.log('‚úÖ –¢–æ–∫–µ–Ω –æ–±–Ω–æ–≤–ª–µ–Ω')
            
            // –ü–æ–≤—Ç–æ—Ä–∏—Ç—å –∏—Å—Ö–æ–¥–Ω—ã–π –∑–∞–ø—Ä–æ—Å
            return apiClient.request(error.config)
            
          } catch (refreshError) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞:', refreshError)
            clearAuth()
            
            // –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —á–µ—Ä–µ–∑ Telegram
            await autoAuthWithTelegram()
          }
        }
      }
      
      return Promise.reject(error)
    }
  )
}
