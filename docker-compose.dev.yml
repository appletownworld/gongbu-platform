version: '3.8'

services:
  # –ë–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏ –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ
  postgres:
    image: postgres:15-alpine
    container_name: gongbu_postgres
    environment:
      POSTGRES_DB: gongbu_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - gongbu_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: gongbu_redis
    ports:
      - "6380:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - gongbu_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ===========================================
  # üåê API GATEWAY - Main Entry Point
  # ===========================================
  
  api-gateway:
    build:
      context: ./services/api-gateway
      dockerfile: Dockerfile.dev
    container_name: gongbu_api_gateway_dev
    ports:
      - "3011:3000"
    environment:
      NODE_ENV: development
      PORT: 3000
      HOST: 0.0.0.0
      
      # Microservices URLs
      AUTH_SERVICE_URL: http://auth-service:3001
      COURSE_SERVICE_URL: http://course-service:3002
      BOT_SERVICE_URL: http://bot-service:3003
      PAYMENT_SERVICE_URL: http://payment-service:3004
      NOTIFICATION_SERVICE_URL: http://notification-service:3005
      ANALYTICS_SERVICE_URL: http://analytics-service:3006
      PLUGIN_SERVICE_URL: http://plugin-service:3007
      
      # Security
      JWT_SECRET: development-jwt-secret-key-change-in-production
      CORS_ORIGIN: "*"
      
      # Redis
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_DB: 0
      
      # Logging
      LOG_LEVEL: info
      ENABLE_REQUEST_LOGGING: true
      
      # API Documentation
      SWAGGER_ENABLED: true
      SWAGGER_PATH: api
      
    volumes:
      - ./services/api-gateway:/app
      - /app/node_modules
    networks:
      - gongbu_network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  # ===========================================
  # üîê AUTH SERVICE
  # ===========================================
  
  auth-service:
    build:
      context: ./services/auth-service
      dockerfile: Dockerfile.dev
    container_name: gongbu_auth_service
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: development
      PORT: 3001
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/gongbu_dev
      REDIS_URL: redis://redis:6379
      JWT_SECRET: development-jwt-secret-key-change-in-production
      JWT_EXPIRES_IN: 24h
    volumes:
      - ./services/auth-service:/app
      - /app/node_modules
    networks:
      - gongbu_network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  # ===========================================
  # üìö COURSE SERVICE
  # ===========================================
  
  course-service:
    build:
      context: ./services/course-service
      dockerfile: Dockerfile.dev
    container_name: gongbu_course_service
    ports:
      - "3012:3002"
    environment:
      NODE_ENV: development
      PORT: 3002
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/gongbu_dev
      REDIS_URL: redis://redis:6379
      JWT_SECRET: development-jwt-secret-key-change-in-production
    volumes:
      - ./services/course-service:/app
      - /app/node_modules
      - ./uploads:/app/uploads
    networks:
      - gongbu_network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  # ===========================================
  # ü§ñ BOT SERVICE
  # ===========================================
  
  bot-service:
    build:
      context: ./services/bot-service
      dockerfile: Dockerfile.dev
    container_name: gongbu_bot_service
    ports:
      - "3013:3003"
    environment:
      NODE_ENV: development
      PORT: 3003
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/gongbu_dev
      REDIS_URL: redis://redis:6379
      JWT_SECRET: development-jwt-secret-key-change-in-production
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN:-}
    volumes:
      - ./services/bot-service:/app
      - /app/node_modules
    networks:
      - gongbu_network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  # ===========================================
  # üí≥ PAYMENT SERVICE
  # ===========================================
  
  payment-service:
    build:
      context: ./services/payment-service
      dockerfile: Dockerfile.dev
    container_name: gongbu_payment_service
    ports:
      - "3004:3004"
    environment:
      NODE_ENV: development
      PORT: 3004
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/gongbu_dev
      REDIS_URL: redis://redis:6379
      JWT_SECRET: development-jwt-secret-key-change-in-production
    volumes:
      - ./services/payment-service:/app
      - /app/node_modules
    networks:
      - gongbu_network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  # ===========================================
  # üîî NOTIFICATION SERVICE
  # ===========================================
  
  notification-service:
    build:
      context: ./services/notification-service
      dockerfile: Dockerfile.dev
    container_name: gongbu_notification_service
    ports:
      - "3005:3005"
    environment:
      NODE_ENV: development
      PORT: 3005
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/gongbu_dev
      REDIS_URL: redis://redis:6379
      JWT_SECRET: development-jwt-secret-key-change-in-production
    volumes:
      - ./services/notification-service:/app
      - /app/node_modules
    networks:
      - gongbu_network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  # ===========================================
  # üìä ANALYTICS SERVICE
  # ===========================================
  
  analytics-service:
    build:
      context: ./services/analytics-service
      dockerfile: Dockerfile.dev
    container_name: gongbu_analytics_service
    ports:
      - "3006:3006"
    environment:
      NODE_ENV: development
      PORT: 3006
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/gongbu_dev
      REDIS_URL: redis://redis:6379
      JWT_SECRET: development-jwt-secret-key-change-in-production
    volumes:
      - ./services/analytics-service:/app
      - /app/node_modules
    networks:
      - gongbu_network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  # ===========================================
  # üîå PLUGIN SERVICE
  # ===========================================
  
  plugin-service:
    build:
      context: ./services/plugin-service
      dockerfile: Dockerfile.dev
    container_name: gongbu_plugin_service
    ports:
      - "3007:3007"
    environment:
      NODE_ENV: development
      PORT: 3007
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/gongbu_dev
      REDIS_URL: redis://redis:6379
      JWT_SECRET: development-jwt-secret-key-change-in-production
    volumes:
      - ./services/plugin-service:/app
      - /app/node_modules
    networks:
      - gongbu_network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  # ===========================================
  # üåê WEB APPLICATION
  # ===========================================
  
  web-app:
    build:
      context: ./apps/web-app
      dockerfile: Dockerfile.dev
    container_name: gongbu_web_app
    ports:
      - "3008:3000"
    environment:
      NODE_ENV: development
      REACT_APP_API_URL: http://localhost:3000
      REACT_APP_WS_URL: ws://localhost:3000
    volumes:
      - ./apps/web-app:/app
      - /app/node_modules
    networks:
      - gongbu_network
    depends_on:
      - api-gateway
    restart: unless-stopped

  # ===========================================
  # üì± TELEGRAM MINI APP
  # ===========================================
  
  telegram-mini-app:
    build:
      context: ./apps/telegram-mini-app
      dockerfile: Dockerfile.dev
    container_name: gongbu_telegram_mini_app
    ports:
      - "3009:3000"
    environment:
      NODE_ENV: development
      REACT_APP_API_URL: http://localhost:3000
      REACT_APP_TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN:-}
    volumes:
      - ./apps/telegram-mini-app:/app
      - /app/node_modules
    networks:
      - gongbu_network
    depends_on:
      - api-gateway
    restart: unless-stopped

  # ===========================================
  # üë®‚Äçüè´ TEACHER DASHBOARD
  # ===========================================
  
  teacher-dashboard:
    build:
      context: ./apps/teacher-dashboard
      dockerfile: Dockerfile.dev
    container_name: gongbu_teacher_dashboard
    ports:
      - "3010:3000"
    environment:
      NODE_ENV: development
      REACT_APP_API_URL: http://localhost:3000
    volumes:
      - ./apps/teacher-dashboard:/app
      - /app/node_modules
    networks:
      - gongbu_network
    depends_on:
      - api-gateway
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  gongbu_network:
    driver: bridge